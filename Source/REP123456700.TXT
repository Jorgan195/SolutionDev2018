OBJECT Report 123456700 Create Seminar Invoices
{
  OBJECT-PROPERTIES
  {
    Date=03/09/18;
    Time=10:27:19;
    Modified=Yes;
    Version List=CSD1.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Seminar Invoices;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7201;    ;DataItem;                    ;
               DataItemTable=Table123456732;
               OnPreDataItem=BEGIN
                               IF PostingDateReq = 0D THEN
                                 ERROR(Text000);
                               IF DocDateReq = 0D THEN
                                 ERROR(Text001);

                               Window.OPEN(
                                 Text002 +
                                 Text003 +
                                 Text004);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Bill-to Customer No." <> Customer."No." THEN
                                    Customer.GET("Bill-to Customer No.");

                                  IF Customer.Blocked IN [Customer.Blocked::All,Customer.Blocked::Invoice] THEN BEGIN
                                    NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
                                  END ELSE BEGIN
                                    IF "Bill-to Customer No." <> SalesHeader."Bill-to Customer No." THEN BEGIN
                                      Window.UPDATE(1,"Bill-to Customer No.");
                                      IF SalesHeader."No." <> '' THEN
                                        FinalizeSalesInvoiceHeader;
                                      InsertSalesInvoiceHeader;
                                    END;
                                    Window.UPDATE(2,"Seminar Registration No.");

                                    CASE Type OF
                                      Type::Resource:
                                      BEGIN
                                        SalesLine.Type := SalesLine.Type::Resource;
                                        CASE "Charge Type" OF
                                          "Charge Type"::Instructor:
                                            SalesLine."No." := "Instructor Resource No.";
                                          "Charge Type"::Room:
                                            SalesLine."No." := "Room Resource No.";
                                          "Charge Type"::Participant:
                                            SalesLine."No." := "Instructor Resource No.";
                                        END;
                                      END;
                                    END;

                                    SalesLine."Document Type" := SalesHeader."Document Type";
                                    SalesLine."Document No." := SalesHeader."No.";
                                    SalesLine."Line No." := NextLineNo;
                                    SalesLine.VALIDATE("No.");
                                    Seminar.GET("Seminar No.");
                                    IF Description <> '' THEN
                                      SalesLine.Description := Description
                                    ELSE
                                      SalesLine.Description := Seminar.Name;

                                    SalesLine."Unit Price" := "Unit Price";
                                    IF SalesHeader."Currency Code" <> '' THEN BEGIN
                                      SalesHeader.TESTFIELD("Currency Factor");
                                      SalesLine."Unit Price" :=
                                        ROUND(
                                          CurrencyExchRate.ExchangeAmtLCYToFCY(
                                          WORKDATE,SalesHeader."Currency Code",
                                          SalesLine."Unit Price",SalesHeader."Currency Factor"));
                                    END;
                                    SalesLine.VALIDATE(Quantity,Quantity);
                                    SalesLine.INSERT;
                                    NextLineNo := NextLineNo + 10000;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                IF SalesHeader."No." = '' THEN BEGIN
                                  MESSAGE(Text007);
                                END ELSE BEGIN
                                  FinalizeSalesInvoiceHeader;
                                  IF NoOfSalesInvErrors = 0 THEN
                                    MESSAGE(
                                      Text005,
                                      NoOfSalesInv)
                                  ELSE
                                    MESSAGE(
                                      Text006,
                                      NoOfSalesInvErrors)
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF PostingDateReq = 0D THEN
                     PostingDateReq := WORKDATE;
                   IF DocDateReq = 0D THEN
                     DocDateReq := WORKDATE;
                   SalesSetup.GET;
                   CalcInvoiceDiscount := SalesSetup."Calc. Inv. Discount";
                 END;

    }
    CONTROLS
    {
      { 6   ;    ;Container ;
                  ContainerType=ContentArea }

      { 5   ;1   ;Group     ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 4   ;2   ;Field     ;
                  CaptionML=ENU=Posting Date;
                  SourceExpr=PostingDateReq }

      { 3   ;2   ;Field     ;
                  CaptionML=ENU=Document Date;
                  SourceExpr=DocDateReq }

      { 2   ;2   ;Field     ;
                  CaptionML=ENU=Calc. Inv. Discount;
                  SourceExpr=CalcInvoiceDiscount }

      { 1   ;2   ;Field     ;
                  CaptionML=ENU=Post Invoices;
                  SourceExpr=PostInvoices }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CurrencyExchRate@1000000020 : Record 330;
      Customer@1000000019 : Record 18;
      GLSetup@1000000018 : Record 98;
      SalesHeader@1000000013 : Record 36;
      SalesLine@1000000012 : Record 37;
      SalesSetup@1000000011 : Record 311;
      SalesCalcDiscount@1000000010 : Codeunit 60;
      SalesPost@1000000009 : Codeunit 80;
      CalcInvoiceDiscount@1000000008 : Boolean;
      PostInvoices@1000000007 : Boolean;
      NextLineNo@1000000006 : Integer;
      NoOfSalesInvErrors@1000000005 : Integer;
      NoOfSalesInv@1000000004 : Integer;
      PostingDateReq@1000000002 : Date;
      DocDateReq@1000000001 : Date;
      Window@1000000000 : Dialog;
      Text000@1000000028 : TextConst 'ENU=Please enter the posting date.';
      Text001@1000000027 : TextConst 'ENU=Please enter the document date.';
      Text002@1000000026 : TextConst 'ENU=Creating Seminar Invoices...\\';
      Text003@1000000025 : TextConst 'ENU=Customer No.      #1##########\';
      Text004@1000000024 : TextConst 'ENU=Registration No.   #2##########\';
      Text005@1000000023 : TextConst 'ENU=The number of invoice(s) created is %1.';
      Text006@1000000022 : TextConst 'ENU=Not all the invoices were posted. A total of %1 invoices were not posted.';
      Text007@1000000021 : TextConst 'ENU=There is nothing to invoice.';
      Seminar@1000 : Record 123456700;

    LOCAL PROCEDURE FinalizeSalesInvoiceHeader@1();
    BEGIN
      WITH SalesHeader DO BEGIN
        IF CalcInvoiceDiscount THEN
          SalesCalcDiscount.RUN(SalesLine);
        GET("Document Type","No.");
        COMMIT;
        CLEAR(SalesCalcDiscount);
        CLEAR(SalesPost);
        NoOfSalesInv := NoOfSalesInv + 1;
        IF PostInvoices THEN BEGIN
          CLEAR(SalesPost);
          IF NOT SalesPost.RUN(SalesHeader) THEN
            NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertSalesInvoiceHeader@2();
    BEGIN
      WITH SalesHeader DO BEGIN
        INIT;
        "Document Type" := "Document Type"::Invoice;
        "No." := '';
        INSERT(TRUE);
        VALIDATE("Sell-to Customer No.","Seminar Ledger Entry"."Bill-to Customer No.");
        IF "Bill-to Customer No." <> "Sell-to Customer No." THEN
          VALIDATE("Bill-to Customer No.","Seminar Ledger Entry"."Bill-to Customer No.");
        VALIDATE("Posting Date",PostingDateReq);
        VALIDATE("Document Date",DocDateReq);
        VALIDATE("Currency Code",'');
        MODIFY;
        COMMIT;

        NextLineNo := 10000;
      END;
    END;

    BEGIN
    {
      CSD1.00 - 2013-06-02 - D. E. Veloper
        Chapter 6 - Lab 2
          - Created new report
    }
    END.
  }
  RDLDATA
  {
  }
}

